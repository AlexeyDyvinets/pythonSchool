import re

# Функция открывает файл, указанный в аргументе и запускает фукцию, которая находит необходимые нам значения в логе
# Todo 1. функция не универсальна т.е она не только читает файл а еще как то его пытветься обработать.
#  если к примеру тебе нужно будет еще другой файл читать с другим содержимым то опять переписывать нужно
#  + функция сма по себе ничего не возвращает
#  2. когда операции с файлом оконечены его нужно закрыть
def file_opener(file):
    log = open(file)
    text = log.read()  # в данном случае тебе не нужен файл целиком, с ним сложно работать посмотри .readline()
    logs_finder(text)

# todo попробуй не использовать модул re он тут оч прям избыточен посмотри в сторону вхождения подстроки в строку
def logs_finder(text):
    logs_reader = re.findall(r'eid:(.*)', text)
# Ищем 2 последних лога, и разделяем их
    log1 = logs_reader[-1].replace(';', '\n').split()
    log2 = logs_reader[-2].replace(';', '\n').split()
    print(f'Предпоследние eid:{log2}\nПоследние eid:{log1}')
    logs_handler(log1, log2)

# todo в текущей реализации все по два раза по два раза получилось не используй тут модуль re оно не нужно
#  в контексте обучения тут должны быть методы строк + медленей работатают
def logs_handler(log1, log2):
# Преобразуем списки в строки, для того, чтобы с помощью регулярных выражений разделить имена и значения логов, 
# чтобы потом объеденить их в словарь    
    log1 = ''.join(log1)
    log2 = ''.join(log2)
    log1_names = re.findall(r'[^.0-9]\w*[^.0-9]', log1)
    log2_names = re.findall(r'[^.0-9]\w*[^.0-9]', log2)
    log1_val = re.findall(r'\d+', log1)
    log2_val = re.findall(r'\d+', log2)
    log1 = dict(zip(log1_names, log1_val))
    log2 = dict(zip(log2_names, log2_val))

    print(log1, log2, sep='\n')

# todo : if __name__ == '__main__':
file_opener('hw.log')

